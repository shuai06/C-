#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// 2.二维数组

/**
int a[3][4];
总共12个元素，可以当做3行4列看待，依次是:
a[0][0],a[0][1],a[0][2],a[0][3]
a[1][0],a[1][1],a[1][2],a[1][3]
a[2][0],a[2][1],a[2][2],a[2][3]

a[i][j]  ==> i+1行，j+1列的元素

int a[m][n];  该二位数组的右下角位置的元素只能是a[m-1][n-1]

*/

void init_double()
{
	//1.最笨的初始化
	int a[3][4]={1,2,3,4,5,6,7,8,9,10,11,12};

	//2.分开写（格式要写正确）
	int b[3][4]={
		{1,2,3,4},
		{5,6,7,8},
		{9,10,11,12}
	};
	
	//3.其他各种初始化



	// 输出二维数组内容
	int i, j;
	for(i=0;i<3;++i)
	{
		for(j=0; j<4; ++j)
		{
			printf("%-5d \t", b[i][j]);    // 付好：左对齐，5代表占5个位置（这不是重点，格式控制有其他控制办法）
		}
		printf("\n");  // 格式化(每四个一行)
	}


	// 二维数组排序
	//求每一行最大值
	//

}



// 多维数组：
/*
1. 不存在! 因为内存是线性一维的
2. n维数组可以当做 每个元素是n-1维数组的一维数组 的数组
比如：a[3][4]，可以当做含有三个元素的一维数组，只不过每个元素都可以划分为4个小元素




*/














